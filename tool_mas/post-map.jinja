{#- vim: ft=jinja #}

{%- set users = {} -%}

{%- set user_settings = ["xdg", "completions", "dotconfig", "persistenv", "rchook", "completions", "mas"] -%}

{#- rejectattr filter does not fit with mapping. need to filter out users before merging default values -#}
{%- for tool_user, tool_user_conf in mapdata.get("users", {}).items() -%}
{#- by default, install tool if it was targeted. explicitly deny for a specific user to override -#}
  {%- if tool_user_conf.get("mas", true) -%}
    {%- do users.update({tool_user: {"mas": {}}}) -%}
    {%- for user_setting in user_settings -%}
      {%- if tool_user_conf.get(user_setting) is not none -%}
        {%- do users[tool_user].update({user_setting: salt["defaults.deepcopy"](tool_user_conf[user_setting])}) -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endfor -%}

{#- update all users' configurations for this formula with the formula defaults -#}
{%- do salt["defaults.update"](users, {"mas": mapdata.get("defaults", {})}) -%}

{#- embed user information that will be reused (home, primary group, shell, paths) -#}
{%- for user in users.keys() -%}
  {%- do users[user].update({"_mas": {}}) -%}
  {%- do users[user].update({"name": user}) -%}
  {%- set user_info = salt["user.info"](user) -%}
  {%- load_yaml as user_info -%}
group: {{ salt["user.primary_group"](user) }}
home: {{ user_info.home }}
shell: {{ user_info.shell.split("/")[-1] }}
  {%- endload -%}
{%- endfor -%}

{#- finally embed parsed user config and info in mapdata -#}
{%- do mapdata.update({"users": users.values() | list}) -%}
